# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type OperatorDTO {
  name: String!
  id: String!
  phoneNumber: String!
  createdAt: DateTime!
  externalId: String!
  updatedAt: DateTime!
  hashedRefreshToken: String

  """
  Groups of a user
  """
  groups: [PartialGroupDTO!]
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type PartialOperatorDTO {
  name: String
  id: String
  phoneNumber: String
  createdAt: DateTime
  externalId: String
  updatedAt: DateTime
  hashedRefreshToken: String

  """
  Groups of a user
  """
  groups: [PartialGroupDTO!]
}

type EmployeeDTO {
  name: String!
  id: String!
  phoneNumber: String!
  createdAt: DateTime!
  externalId: String!
  updatedAt: DateTime!
  hashedRefreshToken: String

  """
  Employees of a user
  """
  venues: [PartialVenueDTO!]
}

type PartialEmployeeDTO {
  name: String
  id: String
  phoneNumber: String
  createdAt: DateTime
  externalId: String
  updatedAt: DateTime
  hashedRefreshToken: String

  """
  Employees of a user
  """
  venues: [PartialVenueDTO!]
}

type VenueDTO {
  """
  Unique identifier of a venue
  """
  id: String!

  """
  Name of a venue
  """
  name: String!

  """
  Address of a venue
  """
  address: String!

  """
  Creation date of a venue
  """
  createdAt: DateTime!

  """
  Last update of a venue
  """
  updatedAt: DateTime!

  """
  Employees of a venue
  """
  employees: [PartialEmployeeDTO!]

  """
  Group of a venue
  """
  group: PartialGroupDTO
}

type PartialVenueDTO {
  """
  Unique identifier of a venue
  """
  id: String

  """
  Name of a venue
  """
  name: String

  """
  Address of a venue
  """
  address: String

  """
  Creation date of a venue
  """
  createdAt: DateTime

  """
  Last update of a venue
  """
  updatedAt: DateTime

  """
  Employees of a venue
  """
  employees: [PartialEmployeeDTO!]

  """
  Group of a venue
  """
  group: PartialGroupDTO
}

type GroupDTO {
  """
  Unique identifier of a group
  """
  id: String!

  """
  Name of a group
  """
  name: String!

  """
  Description of a group
  """
  description: String

  """
  Creation date of a group
  """
  createdAt: DateTime!

  """
  Last update of a group
  """
  updatedAt: DateTime!

  """
  Operators of a group
  """
  operators: [PartialOperatorDTO!]

  """
  Venues of a group
  """
  venues: [PartialVenueDTO!]
}

type PartialGroupDTO {
  """
  Unique identifier of a group
  """
  id: String

  """
  Name of a group
  """
  name: String

  """
  Description of a group
  """
  description: String

  """
  Creation date of a group
  """
  createdAt: DateTime

  """
  Last update of a group
  """
  updatedAt: DateTime

  """
  Operators of a group
  """
  operators: [PartialOperatorDTO!]

  """
  Venues of a group
  """
  venues: [PartialVenueDTO!]
}

type FindAllGroupsOfOperatorResponseDTO {
  groups: [GroupDTO!]!
  total: Float!
}

type SignupResponse {
  accessToken: String
  refreshToken: String
  code: String
}

type VerifyResponse {
  accessToken: String
  refreshToken: String
}

type RefreshTokensResponse {
  accessToken: String!
  refreshToken: String!
  userId: String!
}

type Query {
  health: String!
  group: [GroupDTO!]!
  groupById(id: String!): GroupDTO!
  findAllVenuesOfGroup(id: String!): [VenueDTO!]!
  operators: [OperatorDTO!]!
  operator(id: String!): OperatorDTO!
  findAllGroupsOfOperator(id: String!): FindAllGroupsOfOperatorResponseDTO!
  venue: [VenueDTO!]!
  venueById(id: String!): VenueDTO!
  employees: [EmployeeDTO!]!
  employee(id: String!): EmployeeDTO!
  findAllVenuesOfEmployee(id: String!): [VenueDTO!]!
}

type Mutation {
  signup(input: SignupInput!): SignupResponse!
  verify(input: VerifyInput!): VerifyResponse!
  switchGroup(input: SwitchGroupInput!): VerifyResponse!
  selectVenues(input: SelectVenuesInput!): VerifyResponse!
  refreshTokens(input: RefreshTokensInput!): RefreshTokensResponse!
  createGroup(createGroupInput: CreateGroupInput!): GroupDTO!
  updateGroup(updateGroupInput: UpdateGroupInput!): GroupDTO!
  removeGroup(id: String!): GroupDTO!
  addVenueToGroup(groupId: String!, venueId: String!): GroupDTO!
  addOperatorToGroup(groupId: String!, operatorId: String!): GroupDTO!
  createOperator(createOperatorInput: CreateOperatorInput!): OperatorDTO!
  updateOperator(updateOperatorInput: UpdateOperatorInput!): OperatorDTO!
  removeOperator(id: Int!): OperatorDTO!
  createVenue(createVenueInput: CreateVenueInput!): VenueDTO!
  updateVenue(updateVenueInput: UpdateVenueInput!): VenueDTO!
  removeVenue(id: String!): VenueDTO!
  addEmployeeToVenue(venueId: String!, employeeId: String!): VenueDTO!
  createEmployee(createEmployeeInput: CreateEmployeeInput!): EmployeeDTO!
  updateEmployee(updateEmployeeInput: UpdateEmployeeInput!): EmployeeDTO!
  removeEmployee(id: Int!): EmployeeDTO!
}

input SignupInput {
  phoneNumber: String
  role: UserRole! = ANONYMOUS
  externalId: String
}

enum UserRole {
  ANONYMOUS
  PATRON
  EMPLOYEE
  OPERATOR
}

input VerifyInput {
  phoneNumber: String!
  code: String!
  role: UserRole! = ANONYMOUS
}

input SwitchGroupInput {
  groupId: String!
}

input SelectVenuesInput {
  venueIds: [String!]!
}

input RefreshTokensInput {
  refreshToken: String!
}

input CreateGroupInput {
  """
  Name of a group
  """
  name: String!

  """
  Description of a group
  """
  description: String
}

input UpdateGroupInput {
  """
  Name of a group
  """
  name: String

  """
  Description of a group
  """
  description: String
  id: String!
}

input CreateOperatorInput {
  """
  Operator name
  """
  name: String

  """
  Phone number: +38164322521
  """
  phoneNumber: String!

  """
  External ID
  """
  externalId: String

  """
  User ID from Appwrite service
  """
  userId: String

  """
  Group IDs
  """
  groupIds: [String!]
}

input UpdateOperatorInput {
  """
  Operator name
  """
  name: String

  """
  Phone number: +38164322521
  """
  phoneNumber: String

  """
  External ID
  """
  externalId: String

  """
  User ID from Appwrite service
  """
  userId: String

  """
  Group IDs
  """
  groupIds: [String!]
  id: Int!
}

input CreateVenueInput {
  """
  Name of a venue
  """
  name: String!

  """
  Address of a venue
  """
  address: String!
}

input UpdateVenueInput {
  """
  Name of a venue
  """
  name: String

  """
  Address of a venue
  """
  address: String
  id: String!
}

input CreateEmployeeInput {
  """
  Operator name
  """
  name: String

  """
  Phone number: +38164322521
  """
  phoneNumber: String!

  """
  External ID
  """
  externalId: String

  """
  User ID
  """
  userId: String

  """
  Group IDs
  """
  venueIds: [String!]
}

input UpdateEmployeeInput {
  """
  Operator name
  """
  name: String

  """
  Phone number: +38164322521
  """
  phoneNumber: String

  """
  External ID
  """
  externalId: String

  """
  User ID
  """
  userId: String

  """
  Group IDs
  """
  venueIds: [String!]
  id: Int!
}